/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mofkeymanager;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import static java.lang.Integer.parseInt;
import java.sql.Connection; 
import java.sql.Date;
import java.sql.DriverManager; 
import java.sql.PreparedStatement;
import java.sql.SQLException; 
import java.sql.Statement; 
import java.sql.ResultSet; 
import java.text.DateFormat;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import org.h2.tools.Server;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Syed Mazloom Shah
 */



public class frm_Home extends javax.swing.JFrame {

    /**
     * Creates new form frm_Home
     */
    
    
     int totalkeysc,keysissuedc,keysreturnedc, keysissued_A,keysissued_S,keysreturned_A,keysreturned_S,t5, txtcompare, tcki,tckr,tck, keysissued_r,keysissued_ru;
     int totalkeysEc,keysissuedTEc,keysreturnedFEc, keysissuedTE_A,keysissuedTE_S,keysreturnedFE_A,keysreturnedRF_S, txtcompare_i, txtcompare_r,keysremain_rt,keysremain_it,keysremaining_r,keysremaining_i;
   
       Server server = null;
            // JDBC driver name and database URL 
         String JDBC_DRIVER = "org.h2.Driver";   
         //String DB_URL = "jdbc:h2:~/test";
         String DB_URL = "jdbc:h2:tcp://localhost/~/test;AUTO_SERVER=TRUE";
         
       //  Database credentials 
         String USER = "sa"; 
         String PASS = ""; 
        
          Connection conn = null; 
          Statement stmt = null; 
             
    
     
     
     public frm_Home() {
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setExtendedState(frm_Home.MAXIMIZED_BOTH);
        
        this.setTitle("Key Manager 1.0");
       
        
       
        
        jlbl_keyid.setVisible(false);
        jlbl_empid.setVisible(false);
        jlbl_keyid_r.setVisible(false);
        jlbl_empid_r.setVisible(false);
        jlbldt1.setVisible(false);
        jlbldt2.setVisible(false);
        jlbl_textcompare.setVisible(false);
        
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtp_reports = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jtxt_empname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxt_empdept = new javax.swing.JTextField();
        btn_addEmp = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jtxt_empid = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcb_keyDetails = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jcb_empDetails = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jxdt_dateIssued = new org.jdesktop.swingx.JXDatePicker();
        btn_Issue = new javax.swing.JButton();
        jlbl_keyid = new javax.swing.JLabel();
        jlbldt1 = new javax.swing.JLabel();
        jlbl_empid = new javax.swing.JLabel();
        lbl_keysissued = new javax.swing.JLabel();
        jtxt_keysIssued = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jcb_RkeyDetails = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jcb_RempDetails = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jxdt_datereturned = new org.jdesktop.swingx.JXDatePicker();
        btn_Return = new javax.swing.JButton();
        jlbl_keyid_r = new javax.swing.JLabel();
        jlbldt2 = new javax.swing.JLabel();
        jlbl_empid_r = new javax.swing.JLabel();
        lbl_keysissued1 = new javax.swing.JLabel();
        jtxt_keysReturned = new javax.swing.JTextField();
        jlbl_textcompare = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btn_IssueReport = new javax.swing.JButton();
        btn_ReturnReport = new javax.swing.JButton();
        btn_IssueReport1 = new javax.swing.JButton();
        btn_keyEmp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MOFKey Manager Home");
        setIconImage(img);
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setPreferredSize(new java.awt.Dimension(900, 900));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 900));

        jtp_reports.setMaximumSize(new java.awt.Dimension(650, 650));
        jtp_reports.setNextFocusableComponent(jtxt_empid);
        jtp_reports.setPreferredSize(new java.awt.Dimension(650, 650));
        jtp_reports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtp_reportsMouseClicked(evt);
            }
        });

        jLabel7.setText("اسم الموظف:");

        jtxt_empname.setToolTipText("");
        jtxt_empname.setNextFocusableComponent(jtxt_empdept);

        jLabel8.setText("قسم / ديف:");
        jLabel8.setToolTipText("");

        jtxt_empdept.setToolTipText("");
        jtxt_empdept.setNextFocusableComponent(btn_addEmp);

        btn_addEmp.setText("إضافة موظف");
        btn_addEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addEmpActionPerformed(evt);
            }
        });

        jLabel9.setText("Employee ID:");
        jLabel9.setEnabled(false);

        jtxt_empid.setText("OPTIONAL");
        jtxt_empid.setToolTipText("");
        jtxt_empid.setEnabled(false);
        jtxt_empid.setFocusTraversalPolicyProvider(true);
        jtxt_empid.setNextFocusableComponent(jtxt_empname);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_addEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(jtxt_empid, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jtxt_empdept))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jtxt_empname, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_empid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_empname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_empdept, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(btn_addEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(381, Short.MAX_VALUE))
        );

        jtp_reports.addTab("إضافة الموظفين", jPanel3);

        jLabel1.setText("التفاصيل الرئيسية:");

        jcb_keyDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_keyDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_keyDetailsActionPerformed(evt);
            }
        });

        jLabel2.setText("تفاصيل الموظف:");

        jcb_empDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_empDetails.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcb_empDetailsFocusLost(evt);
            }
        });

        jLabel3.setText("تاريخ الإصدار:");

        jxdt_dateIssued.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxdt_dateIssuedActionPerformed(evt);
            }
        });

        btn_Issue.setText("مفتاح المشكلة");
        btn_Issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IssueActionPerformed(evt);
            }
        });

        jlbl_keyid.setText("jLabel10");

        jlbldt1.setText("jLabel10");

        jlbl_empid.setText("jLabel10");

        lbl_keysissued.setText("نو أوف كيس تو إيسو:");

        jtxt_keysIssued.setToolTipText("");
        jtxt_keysIssued.setNextFocusableComponent(jtxt_empdept);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jcb_keyDetails, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_Issue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jlbl_empid, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jlbl_keyid)
                                            .addGap(31, 31, 31)
                                            .addComponent(jlbldt1))
                                        .addComponent(jxdt_dateIssued, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lbl_keysissued, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jtxt_keysIssued, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(jcb_empDetails, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addContainerGap(71, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_keyDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_empDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_keysissued, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_keysIssued, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jxdt_dateIssued, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbl_keyid)
                    .addComponent(jlbldt1))
                .addGap(18, 18, 18)
                .addComponent(jlbl_empid)
                .addGap(34, 34, 34)
                .addComponent(btn_Issue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jtp_reports.addTab("مفاتيح المشكلات", jPanel1);

        jLabel4.setText("التفاصيل الرئيسية:");

        jcb_RkeyDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_RkeyDetails.setNextFocusableComponent(jcb_RempDetails);
        jcb_RkeyDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_RkeyDetailsActionPerformed(evt);
            }
        });

        jLabel5.setText("تفاصيل الموظف:");

        jcb_RempDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_RempDetails.setNextFocusableComponent(jtxt_keysReturned);
        jcb_RempDetails.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_RempDetailsItemStateChanged(evt);
            }
        });
        jcb_RempDetails.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcb_RempDetailsFocusLost(evt);
            }
        });
        jcb_RempDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_RempDetailsActionPerformed(evt);
            }
        });

        jLabel6.setText("تاريخ الإرجاع:");

        jxdt_datereturned.setNextFocusableComponent(btn_Return);
        jxdt_datereturned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxdt_datereturnedActionPerformed(evt);
            }
        });

        btn_Return.setText("مفتاح العودة");
        btn_Return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ReturnActionPerformed(evt);
            }
        });

        jlbl_keyid_r.setText("jLabel10");

        jlbldt2.setText("jLabel10");

        jlbl_empid_r.setText("jLabel10");

        lbl_keysissued1.setText("عدد المفاتيح:");

        jtxt_keysReturned.setToolTipText("");
        jtxt_keysReturned.setNextFocusableComponent(jxdt_datereturned);
        jtxt_keysReturned.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxt_keysReturnedFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxt_keysReturnedFocusLost(evt);
            }
        });
        jtxt_keysReturned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_keysReturnedActionPerformed(evt);
            }
        });

        jlbl_textcompare.setText("jLabel10");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbl_keysissued1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jtxt_keysReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jxdt_datereturned, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(138, 138, 138)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jlbl_keyid_r)
                                .addComponent(jlbl_empid_r))
                            .addGap(31, 31, 31)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jlbl_textcompare)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_Return, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jlbldt2))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jcb_RempDetails, javax.swing.GroupLayout.Alignment.LEADING, 0, 400, Short.MAX_VALUE)
                            .addComponent(jcb_RkeyDetails, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_RkeyDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcb_RempDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_keysissued1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_keysReturned, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jxdt_datereturned, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbl_keyid_r)
                    .addComponent(jlbldt2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbl_empid_r)
                    .addComponent(btn_Return, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbl_textcompare))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        jtp_reports.addTab("مفاتيح العودة", jPanel2);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("انقر على أحد الأزرار التالية للحصول على التقارير كما هو مقترح");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btn_IssueReport.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_IssueReport.setText("انقر هنا لعرض المفاتيح التي تم إصدارها");
        btn_IssueReport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_IssueReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IssueReportActionPerformed(evt);
            }
        });

        btn_ReturnReport.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_ReturnReport.setText("انقر هنا لعرض مفاتيح العودة");
        btn_ReturnReport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_ReturnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ReturnReportActionPerformed(evt);
            }
        });

        btn_IssueReport1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_IssueReport1.setText("انقر هنا لعرض مفاتيح المتبقية");
        btn_IssueReport1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_IssueReport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IssueReport1ActionPerformed(evt);
            }
        });

        btn_keyEmp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_keyEmp.setText("انقر هنا لعرض مفاتيح الموظفين وجود");
        btn_keyEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_keyEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keyEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_keyEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ReturnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_IssueReport, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_IssueReport1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_IssueReport1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btn_keyEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btn_IssueReport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btn_ReturnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );

        jtp_reports.addTab("تقارير", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtp_reports, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtp_reports, javax.swing.GroupLayout.PREFERRED_SIZE, 719, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    /*** ComboBox Override Code
     * 
     * @param evt 
     */
    
   
    
  
 public void setkeyDetails(String type, JComboBox cbox) {        
   
    List<String> strings = new ArrayList<String>();

   
     
          
           try {
              cbox.removeAllItems();     
            server = Server.createTcpServer("-tcpAllowOthers").start();
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement(); 
           // String sql = "SELECT userName, userRole, userPass  FROM tbl_usersData where userName=jtxt_username"; 
           // ResultSet rs = stmt.executeQuery(sql); 
           PreparedStatement statement = conn.prepareStatement("SELECT key_id, building_no, building_name, key_name  FROM tbl_keys order by key_id");    
            
            ResultSet rs = statement.executeQuery(); 
                cbox.addItem(new ComboItem("0" ,"حدد مفتاحا " ));
              while(rs.next()) { 
                  //cbox.addItem(new ComboItem("building_name", "key_id"));
                  cbox.addItem(new ComboItem(rs.getString("key_id") ,rs.getString("building_no")+" : "+ rs.getString("building_name")+" : "+rs.getString("key_name") ));
                 //cbox.addItem(rs.getString("building_name")); 
                       
              }
             
    }   catch (SQLException ex) { 
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } 
}

  

    
    
    class ComboItem
{
    private String key;
    private String value;

    public ComboItem(String key, String value)
    {
        this.key = key;
        this.value = value;
    }

    @Override
    public String toString()
    {
        return this.value;
    }

    public String getKey()
    {
        return key;
    }
    
    public void setKey(String key) {
        this.key = key;
    }

    public String getValue()
    {
        return value;
    }
    
     public void setValue(String value) {
        this.value = value;
    }
}
    
    
    
    
    
    
    
    
    
    
    
    public void setempDetails(String type, JComboBox cbox) {        
   
    List<String> strings = new ArrayList<String>();

   
   
          
           try {
               cbox.removeAllItems();     
            server = Server.createTcpServer("-tcpAllowOthers").start();
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement(); 
           // String sql = "SELECT userName, userRole, userPass  FROM tbl_usersData where userName=jtxt_username"; 
           // ResultSet rs = stmt.executeQuery(sql); 
           PreparedStatement statement = conn.prepareStatement("SELECT e_id,emp_name  FROM tbl_employee order by e_id");    
            
            ResultSet rs = statement.executeQuery(); 
            cbox.addItem(new ComboItem("0" ,"حدد موظف " ));
              while(rs.next()) { 
                 //cbox.addItem(rs.getString("emp_name")); 
                 cbox.addItem(new ComboItem(rs.getString("e_id") ,rs.getString("emp_name") ));
              }
             
    }   catch (SQLException ex) { 
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } 
}

  
public void setempDetailsR(String type, JComboBox cbox, int index) {        
   
    List<String> strings = new ArrayList<String>();

   
      
          
           try {
               cbox.removeAllItems();     
            server = Server.createTcpServer("-tcpAllowOthers").start();
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement(); 
           // String sql = "SELECT userName, userRole, userPass  FROM tbl_usersData where userName=jtxt_username"; 
           // ResultSet rs = stmt.executeQuery(sql); 
           PreparedStatement statement = conn.prepareStatement("SELECT tbl_employee.e_id, tbl_employee.emp_name  FROM tbl_keydetails  inner join tbl_employee on tbl_keydetails.emp_details = tbl_employee.e_id where key_details= ? and keys_issued > keys_returned order by tbl_employee.e_id");    
             statement.setString(1,String.valueOf(index)  );
            ResultSet rs = statement.executeQuery(); 
            cbox.addItem(new ComboItem("0" ,"حدد موظف " ));
              while(rs.next()) { 
                 //cbox.addItem(rs.getString("emp_name")); 
                 cbox.addItem(new ComboItem(rs.getString("e_id") ,rs.getString("emp_name") ));
              }
             
    }   catch (SQLException ex) { 
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } 
}


    
    
    /** End of combobox cobe
     * 
     * @param evt 
     */
    
    
    
    
    
    
    
    private void btn_ReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ReturnActionPerformed
        // TODO add your handling code here:
        
         String jcb_Rkeydetails = String.valueOf(jcb_RkeyDetails.getSelectedItem());
        String jcb_Rempdetails = String.valueOf(jcb_RempDetails.getSelectedItem());
        
        
        String jxdt_datereturned1 = jlbldt2.getText();
        
        if(jxdt_datereturned.getDate() == null || jtxt_keysReturned.getText().isEmpty()){
            
             JOptionPane.showMessageDialog(null, "الرجاء إدخال التفاصيل "
            ,"خطأ في التأكيد", JOptionPane.ERROR_MESSAGE, null );
            
            
        }
        else{
            
        
      // final ImageIcon tickmark = new ImageIcon(this.getClass().getClassLoader().getResource("Images/tick1.png"));
          
            
        int keysreturnedn = parseInt(jtxt_keysReturned.getText());
              System.out.print(", dfdfgdfgdfgdfg" + keysreturnedn );
        
          try {
            server = Server.createTcpServer("-tcpAllowOthers").start();
         Class.forName(JDBC_DRIVER);
          PreparedStatement statement2 = conn.prepareStatement("SELECT keys_issued, keys_returned  FROM tbl_keydetails where key_details= ? and emp_details= ?");    
            statement2.setString(1, jlbl_keyid_r.getText()); 
            statement2.setString(2, jlbl_empid_r.getText()); 
            ResultSet rs2 = statement2.executeQuery(); 
            
            
             while(rs2.next())
            {
                
                txtcompare_i = parseInt(rs2.getString("keys_issued")); 
                txtcompare_r = parseInt(rs2.getString("keys_returned")); 
            }
    
        }
          catch (SQLException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
          }catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        }   
          
          txtcompare=txtcompare_i - txtcompare_r;
       
          if (txtcompare < keysreturnedn)
        {
            JOptionPane.showMessageDialog(this, "تم إدخال المفاتيح "+ keysreturnedn + " أكبر من المفاتيح المتبقية  "+ txtcompare
            ,"مفاتيح عدم تطابق التنبيه", JOptionPane.ERROR_MESSAGE);
        }
          else
          {
          
          
          
          
          
        try {
            server = Server.createTcpServer("-tcpAllowOthers").start();
       
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            System.out.print(", KeyDetails: " + jcb_Rkeydetails); 
             System.out.print(", Employee Details" + jcb_Rempdetails );
              System.out.print(", Employee Details" + jxdt_datereturned1 );
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement();
            
            PreparedStatement statement1 = conn.prepareStatement("SELECT  keys_issued, keys_returned, keys_remaining  FROM tbl_keys where key_id= ?");    
            statement1.setString(1, jlbl_keyid_r.getText());    
            ResultSet rs1 = statement1.executeQuery(); 
            
            while(rs1.next())
            {
                  
                        keysremaining_r  = parseInt(rs1.getString("keys_remaining"));  
                        keysissued_r  = parseInt(rs1.getString("keys_issued"));  
                        keysreturnedc  = parseInt(rs1.getString("keys_returned"));  
                         
            }
            
            keysreturned_A=keysreturnedc + keysreturnedn;
            keysissued_ru = keysissued_r - keysreturnedn;
            keysremain_rt = keysremaining_r + keysreturnedn;
            PreparedStatement ps = conn.prepareStatement(
      "UPDATE tbl_keys SET keys_issued = ?, keys_returned = ?, keys_remaining = ?  WHERE key_id = ? ");

    // set the preparedstatement parameters
    ps.setString(1,String.valueOf(keysissued_ru)  );
    ps.setString(2,String.valueOf(keysreturned_A)  );
    ps.setString(3,String.valueOf(keysremain_rt)  );
     ps.setString(4,jlbl_keyid_r.getText());

    // call executeUpdate to execute our sql update statement
    ps.executeUpdate();
            
            
            PreparedStatement statement2 = conn.prepareStatement("SELECT keys_issued, keys_returned  FROM tbl_keydetails where key_details= ? and emp_details= ?");    
            statement2.setString(1, jlbl_keyid_r.getText()); 
            statement2.setString(2, jlbl_empid_r.getText()); 
            ResultSet rs2 = statement2.executeQuery(); 
            
             if (rs2.next() == false) {
                            System.out.println("not a number"); 
        keysreturnedFEc = 0;
         keysreturnedFE_A=keysreturnedFEc + keysreturnedn;
        PreparedStatement statement3 = conn.prepareStatement("INSERT INTO tbl_keydetails(key_details, emp_details, keys_issued, keys_returned) " + "VALUES ('"+ jlbl_keyid.getText() +"', '"+ jlbl_empid.getText() +"', '0' , '"+ keysreturnedFE_A +"')");    
            //statement.setString(1, jtxt_username);   
            statement3.executeUpdate();
              
                 } else {

        do {
           // Retrieve by column name 
            jlbl_textcompare.setText(rs2.getString("keys_issued")); 
        keysreturnedFEc = parseInt(rs2.getString("keys_returned")); 
        } while (rs2.next());
        keysreturnedFE_A=keysreturnedFEc + keysreturnedn;
            
            
            PreparedStatement ps1 = conn.prepareStatement(
      "UPDATE tbl_keydetails SET keys_returned = ? WHERE key_details = ? and emp_details= ?");

    // set the preparedstatement parameters
    ps1.setString(1,String.valueOf(keysreturnedFE_A)  );
    ps1.setString(2,jlbl_keyid_r.getText());
     ps1.setString(3,jlbl_empid_r.getText());

    // call executeUpdate to execute our sql update statement
    ps1.executeUpdate();
      }
            
           
            
            
                           System.out.println("Total Keys Issued"+ keysissued_A);
       
    
    
    
              
            PreparedStatement statement = conn.prepareStatement("INSERT INTO tbl_keysreturned(key_details, emp_details, date_returned, keys_returned) " + "VALUES ('"+ jlbl_keyid_r.getText() +"', '"+ jlbl_empid_r.getText() +"', '"+ jxdt_datereturned1 +"', '"+ jtxt_keysReturned.getText() +"' )");    
            //statement.setString(1, jtxt_username);   
            statement.executeUpdate();
            System.out.print(", KeyDetails: " + jcb_Rkeydetails); 
             System.out.print(", Employee Details" + jcb_Rempdetails );
              statement.close(); 
              conn.close();
            
          } catch (SQLException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        }   
            
         JOptionPane.showMessageDialog(this, "تم إرجاع المفتاح بنجاح من " + jcb_Rempdetails
            ,"عودة تأكيد", JOptionPane.INFORMATION_MESSAGE ,tick );
        
         jcb_RkeyDetails.setSelectedIndex(0);
          jcb_RempDetails.setSelectedIndex(0);
          jxdt_datereturned.setDate(null);
         jtxt_keysReturned.setText("");
         
         
          
        }
        }
        
    }//GEN-LAST:event_btn_ReturnActionPerformed

    
    
    
    
    
    
    private void btn_IssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IssueActionPerformed
        // TODO add your handling code here:
        
        String jcb_keydetails = String.valueOf(jcb_keyDetails.getSelectedItem());
        String jcb_empdetails = String.valueOf(jcb_empDetails.getSelectedItem());
       
      
         
      
        
        String jxdt_dateissued = jlbldt1.getText();
        
        if(jxdt_dateIssued.getDate() == null || jtxt_keysIssued.getText().isEmpty()){
            
             JOptionPane.showMessageDialog(null, "الرجاء إدخال التفاصيل "
            ,"خطأ في التأكيد", JOptionPane.ERROR_MESSAGE, null );
            
            
        }
        else{
            
        
            

      final ImageIcon tickmark = new ImageIcon("/~/tick1.png");
     
             int keysissuedn = parseInt(jtxt_keysIssued.getText());
        
       
        
        try {
            server = Server.createTcpServer("-tcpAllowOthers").start();
       
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            System.out.print(", KeyDetails: " + jcb_keydetails); 
             System.out.print(", Employee Details" + jcb_empdetails );
              System.out.print(", Employee Details" + jxdt_dateissued );
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement();
              
            
            PreparedStatement statement1 = conn.prepareStatement("SELECT keys_issueable, keys_issued, keys_remaining  FROM tbl_keys where key_id= ?");    
            statement1.setString(1, jlbl_keyid.getText());    
            ResultSet rs1 = statement1.executeQuery(); 
            
            while(rs1.next())
            {
                  
                        tck  = parseInt(rs1.getString("keys_issueable"));  
                         tcki  = parseInt(rs1.getString("keys_issued")); 
                         keysremain_it  = parseInt(rs1.getString("keys_remaining")); 
                         
            }
            
            
            tckr = tck - tcki;
            
            if(tckr < keysissuedn )
            {
                 JOptionPane.showMessageDialog(this, "تم إدخال المفاتيح "+ keysissuedn + " أكبر من المفاتيح المتبقية  "+ tckr
            ,"مفاتيح عدم تطابق التنبيه", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
             
            keysissued_A=tcki + keysissuedn;
            keysremaining_i = keysremain_it - keysissuedn;
            PreparedStatement ps = conn.prepareStatement(
      "UPDATE tbl_keys SET keys_issued = ?, keys_remaining = ? WHERE key_id = ? ");

    // set the preparedstatement parameters
    ps.setString(1,String.valueOf(keysissued_A)  );
     ps.setString(2,String.valueOf(keysremaining_i)  );
     ps.setString(3,jlbl_keyid.getText());

    // call executeUpdate to execute our sql update statement
    ps.executeUpdate();
            
            
            PreparedStatement statement2 = conn.prepareStatement("SELECT keys_issued  FROM tbl_keydetails where key_details= ? and emp_details= ?");    
            statement2.setString(1, jlbl_keyid.getText()); 
            statement2.setString(2, jlbl_empid.getText()); 
            ResultSet rs2 = statement2.executeQuery(); 
            
             if (rs2.next() == false) {
                            System.out.println("not a number"); 
        keysissuedTEc = 0;
         keysissuedTE_A=keysissuedTEc + keysissuedn;
        PreparedStatement statement3 = conn.prepareStatement("INSERT INTO tbl_keydetails(key_details, emp_details, keys_issued, keys_returned) " + "VALUES ('"+ jlbl_keyid.getText() +"', '"+ jlbl_empid.getText() +"', '"+ keysissuedTE_A +"', '0' )");    
            //statement.setString(1, jtxt_username);   
            statement3.executeUpdate();
              
                 } else {

        do {
           // Retrieve by column name 
            
        keysissuedTEc = parseInt(rs2.getString("keys_issued")); 
        } while (rs2.next());
        keysissuedTE_A=keysissuedTEc + keysissuedn;
            
            
            PreparedStatement ps1 = conn.prepareStatement(
      "UPDATE tbl_keydetails SET keys_issued = ? WHERE key_details = ? and emp_details= ?");

    // set the preparedstatement parameters
    ps1.setString(1,String.valueOf(keysissuedTE_A)  );
    ps1.setString(2,jlbl_keyid.getText());
     ps1.setString(3,jlbl_empid.getText());

    // call executeUpdate to execute our sql update statement
    ps1.executeUpdate();
      }
            
           
            
            
                           System.out.println("Total Keys Issued"+ keysissued_A);
                           
                           
            PreparedStatement statement = conn.prepareStatement("INSERT INTO tbl_keysissued(key_details, emp_details, date_issued, keys_issued) " + "VALUES ('"+ jlbl_keyid.getText() +"', '"+ jlbl_empid.getText() +"', '"+ jxdt_dateissued +"', '"+ jtxt_keysIssued.getText() +"' )");    
            //statement.setString(1, jtxt_username);   
            statement.executeUpdate();
            System.out.print(", KeyDetails: " + jcb_keydetails); 
             System.out.print(", Employee Details" + jcb_empdetails );
              statement.close(); 
              conn.close();
              
                JOptionPane.showMessageDialog(null, keysissuedn + "تم إصدار المفتاح بنجاح " + jcb_empdetails
            ,"تأكيد المشكلة", JOptionPane.INFORMATION_MESSAGE, tick );
            }
          } catch (SQLException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        }   
            
      
        
        //jtxt_empid.setText("");
         //jtxt_empname.setText("");
          //jtxt_empdept.setText("");
        
        jcb_keyDetails.setSelectedIndex(0);
        jcb_empDetails.setSelectedIndex(0);
         jxdt_dateIssued.setDate(null);
         jtxt_keysIssued.setText("");
       
        
        
        }
        
        
    }//GEN-LAST:event_btn_IssueActionPerformed

    private void btn_addEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addEmpActionPerformed
        // TODO add your handling code here:
        final ImageIcon tickmark = new ImageIcon("/~/tick1.png");
         if(jtxt_empname.getText().isEmpty() && jtxt_empdept.getText().isEmpty() )
        {
            JOptionPane.showMessageDialog(this, "الرجاء إدخال تفاصيل الموظف"
            ,"خطأ في البيانات", JOptionPane.ERROR_MESSAGE);
        }
         else{
        
         String jtxt_ename = jtxt_empname.getText();
         String jtxt_edept = jtxt_empdept.getText();
         //String jtxt_eid = jtxt_empid.getText();
        //int jtxt_eid = Integer.parseInt(jtxt_empid.getText());
        /*String jtxt_eid;
       
        if(jtxt_empid.getText().isEmpty())
        {
            jtxt_eid="0";
        }
        else
        {
            jtxt_eid=jtxt_empid.getText();
        }*/
      
        
            
                    
        try {
            server = Server.createTcpServer("-tcpAllowOthers").start();
       
            // STEP 1: Register JDBC driver
            Class.forName(JDBC_DRIVER);
            
            // STEP 2: Open a connection 
            System.out.println("Connecting to database..."); 
            conn = DriverManager.getConnection(DB_URL,USER,PASS);  
          
            // STEP 3: Execute a query 
            System.out.println("Connected database successfully..."); 
            stmt = conn.createStatement();
            
            PreparedStatement statement = conn.prepareStatement("INSERT INTO tbl_Employee( emp_name, Emp_dept) " + "VALUES ( '"+ jtxt_ename +"', '"+ jtxt_edept +"' )");    
            //statement.setString(1, jtxt_username);   
            statement.executeUpdate();
            System.out.print(", EmployeeName: " + jtxt_ename); 
             System.out.print(", Employee Dept" + jtxt_edept );
              statement.close(); 
              conn.close();
            
          } catch (SQLException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_Home.class.getName()).log(Level.SEVERE, null, ex);
        }   
           
        JOptionPane.showMessageDialog(this, "تمت إضافة الموظف " + jtxt_ename
            ,"إضافة تأكيد", JOptionPane.INFORMATION_MESSAGE, tick);
        
        jtxt_empid.setText("");
         jtxt_empname.setText("");
          jtxt_empdept.setText("");
         }
        
    }//GEN-LAST:event_btn_addEmpActionPerformed

    private void jcb_keyDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_keyDetailsActionPerformed
        // TODO add your handling code here:    
       // setempDetails("Fixed", jcb_empDetails); // call this method here.. This will work.
    }//GEN-LAST:event_jcb_keyDetailsActionPerformed

    private void jxdt_dateIssuedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jxdt_dateIssuedActionPerformed
        // TODO add your handling code here:
      
        
        Calendar cals = Calendar.getInstance();
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        formater.format(jxdt_dateIssued.getDate());
         jlbldt1.setText(formater.format(cals.getTime()));
           
           
    }//GEN-LAST:event_jxdt_dateIssuedActionPerformed

    private void jxdt_datereturnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jxdt_datereturnedActionPerformed
        // TODO add your handling code here:
        
        Calendar cals = Calendar.getInstance();
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        formater.format(jxdt_datereturned.getDate());
         jlbldt2.setText(formater.format(cals.getTime()));
            
        
    }//GEN-LAST:event_jxdt_datereturnedActionPerformed

    private void btn_IssueReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IssueReportActionPerformed
        // TODO add your handling code here:
      keys_issued.main(new String[0]);
    }//GEN-LAST:event_btn_IssueReportActionPerformed

    private void btn_ReturnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ReturnReportActionPerformed
        // TODO add your handling code here:
         keys_returned.main(new String[0]);
    }//GEN-LAST:event_btn_ReturnReportActionPerformed

    private void jtp_reportsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtp_reportsMouseClicked
        // TODO add your handling code here:
        setempDetails("Fixed", jcb_empDetails); // call this method here.. This will work.
        setkeyDetails("Fixed", jcb_keyDetails);
        
       // call this method here.. This will work.
        setkeyDetails("Fixed", jcb_RkeyDetails);
        
        
    }//GEN-LAST:event_jtp_reportsMouseClicked

    private void jcb_RkeyDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_RkeyDetailsActionPerformed
        // TODO add your handling code here:
        int index=jcb_RkeyDetails.getSelectedIndex();
         setempDetailsR("Fixed", jcb_RempDetails, index); 
        
    }//GEN-LAST:event_jcb_RkeyDetailsActionPerformed

    private void jtxt_keysReturnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_keysReturnedActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jtxt_keysReturnedActionPerformed

    private void jtxt_keysReturnedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxt_keysReturnedFocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jtxt_keysReturnedFocusGained

    private void jtxt_keysReturnedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxt_keysReturnedFocusLost
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jtxt_keysReturnedFocusLost

    private void jcb_RempDetailsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcb_RempDetailsFocusLost
         Object item1 = jcb_RkeyDetails.getSelectedItem();
          jlbl_keyid_r.setText(((ComboItem)item1).getKey());
            Object item2 = jcb_RempDetails.getSelectedItem();
          jlbl_empid_r.setText(((ComboItem)item2).getKey());
    }//GEN-LAST:event_jcb_RempDetailsFocusLost

    private void jcb_RempDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_RempDetailsActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jcb_RempDetailsActionPerformed

    private void jcb_RempDetailsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_RempDetailsItemStateChanged
        // TODO add your handling code here:
      
       
       
     
    }//GEN-LAST:event_jcb_RempDetailsItemStateChanged

    private void jcb_empDetailsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcb_empDetailsFocusLost
        // TODO add your handling code here:
          Object item1 = jcb_keyDetails.getSelectedItem();
          jlbl_keyid.setText(((ComboItem)item1).getKey());
         Object item2 = jcb_empDetails.getSelectedItem();
          jlbl_empid.setText(((ComboItem)item2).getKey());
    }//GEN-LAST:event_jcb_empDetailsFocusLost

    private void btn_IssueReport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IssueReport1ActionPerformed
        // TODO add your handling code here:
        keys_remaining.main(new String[0]);
    }//GEN-LAST:event_btn_IssueReport1ActionPerformed

    private void btn_keyEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keyEmpActionPerformed
        // TODO add your handling code here:
         Keys_withEmp.main(new String[0]);
    }//GEN-LAST:event_btn_keyEmpActionPerformed

    
            
    
   
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Home().setVisible(true);
              
            }
        });
       
      
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Issue;
    private javax.swing.JButton btn_IssueReport;
    private javax.swing.JButton btn_IssueReport1;
    private javax.swing.JButton btn_Return;
    private javax.swing.JButton btn_ReturnReport;
    private javax.swing.JButton btn_addEmp;
    private javax.swing.JButton btn_keyEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JComboBox<String> jcb_RempDetails;
    private javax.swing.JComboBox<String> jcb_RkeyDetails;
    private javax.swing.JComboBox<String> jcb_empDetails;
    private javax.swing.JComboBox<String> jcb_keyDetails;
    private javax.swing.JLabel jlbl_empid;
    private javax.swing.JLabel jlbl_empid_r;
    private javax.swing.JLabel jlbl_keyid;
    private javax.swing.JLabel jlbl_keyid_r;
    private javax.swing.JLabel jlbl_textcompare;
    private javax.swing.JLabel jlbldt1;
    private javax.swing.JLabel jlbldt2;
    private javax.swing.JTabbedPane jtp_reports;
    private javax.swing.JTextField jtxt_empdept;
    private javax.swing.JTextField jtxt_empid;
    private javax.swing.JTextField jtxt_empname;
    private javax.swing.JTextField jtxt_keysIssued;
    private javax.swing.JTextField jtxt_keysReturned;
    private org.jdesktop.swingx.JXDatePicker jxdt_dateIssued;
    private org.jdesktop.swingx.JXDatePicker jxdt_datereturned;
    private javax.swing.JLabel lbl_keysissued;
    private javax.swing.JLabel lbl_keysissued1;
    // End of variables declaration//GEN-END:variables
      //ImageIcon tick =(new ImageIcon(getClass().getResource("tick3.png"))).getImage();
    ImageIcon icon = new ImageIcon("Images/tick3.png");
  ImageIcon tick = new ImageIcon("tick3.png");
   Image img =(new ImageIcon(getClass().getResource("key2.png"))).getImage();
}
